{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { apiPostAuth } from '../../utils/api';\nimport { useRouter } from 'next/router';\nimport { useState, useEffect } from 'react';\nimport { isEmpty, capitalize } from 'lodash';\nimport GoogleLogin from 'react-google-login';\nimport Link from 'next/link';\nimport { Container, AuthCard, Title, Divider, LinkAuth } from './authStyle';\n\nvar Auth = function Auth() {\n  var router = useRouter();\n\n  var _useState = useState({\n    email: '',\n    password: ''\n  }),\n      form = _useState[0],\n      setForm = _useState[1];\n\n  var _useState2 = useState({\n    message: '',\n    status: null\n  }),\n      isSuccess = _useState2[0],\n      setSuccess = _useState2[1];\n\n  useEffect(function () {\n    if (!isEmpty(window.localStorage.getItem('isToken'))) {\n      router.push('/');\n    }\n  }, []);\n\n  var responseGoogle = function responseGoogle(response) {\n    var data = {\n      account_id: response.profileObj.googleId,\n      type: 'google',\n      name: response.profileObj.name,\n      email: response.profileObj.email,\n      imageUrl: response.profileObj.imageUrl\n    };\n    window.localStorage.setItem('isToken', response.accessToken);\n    window.localStorage.setItem('isProfile', JSON.stringify(data));\n    setSuccess({\n      status: true,\n      message: 'Berhasil masuk!'\n    });\n    setTimeout(function () {\n      setSuccess({\n        status: true,\n        message: ''\n      });\n      router.push('/');\n    }, 2000);\n  };\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              _context.prev = 1;\n              _context.next = 4;\n              return apiPostAuth(\"https://reqres.in/api\".concat(router.pathname), form);\n\n            case 4:\n              response = _context.sent;\n              window.localStorage.setItem('isToken', response.data.token);\n\n              if (response.status === 200) {\n                data = {\n                  type: 'my-app',\n                  name: (form.email || '').substring(0, form.email.lastIndexOf(\"@\")),\n                  email: form.email,\n                  imageUrl: ''\n                };\n                router.pathname === '/login' ? setSuccess({\n                  status: true,\n                  message: 'Berhasil masuk!'\n                }) : setSuccess({\n                  status: true,\n                  message: 'Berhasil daftar!'\n                });\n                setTimeout(function () {\n                  setSuccess({\n                    status: true,\n                    message: ''\n                  });\n                  window.localStorage.setItem('isProfile', JSON.stringify(data));\n                  router.push('/');\n                }, 2000);\n              }\n\n              _context.next = 13;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n              if (_context.t0.response.status === 400) {\n                router.pathname === '/login' ? setSuccess({\n                  status: false,\n                  message: 'Email atau Password salah!'\n                }) : setSuccess({\n                  status: false,\n                  message: 'Gagal mendaftar!'\n                });\n                setTimeout(function () {\n                  setSuccess({\n                    status: false,\n                    message: ''\n                  });\n                }, 5000);\n              }\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 9]]);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Container, {\n    className: \"container-sm\"\n  }, __jsx(AuthCard, null, router.pathname === '/login' ? __jsx(Title, null, \"Masuk\") : __jsx(Title, null, \"Daftar\"), router.pathname === '/login' && __jsx(React.Fragment, null, __jsx(GoogleLogin, {\n    clientId: \"1036312684002-9r1ei9mim483alvglj88bovq1prufg1i.apps.googleusercontent.com\",\n    buttonText: \"Masuk dengan Google\",\n    onSuccess: responseGoogle,\n    onFailure: responseGoogle,\n    className: \"google-btn\",\n    cookiePolicy: 'single_host_origin'\n  }), __jsx(Divider, {\n    className: \"hr-label\"\n  }, __jsx(\"span\", null, \"atau\"))), __jsx(\"form\", {\n    onSubmit: onSubmit\n  }, __jsx(\"div\", {\n    className: \"input-group mb-3\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Email\",\n    maxLength: 30,\n    \"aria-label\": \"Email\",\n    \"aria-describedby\": \"basic-addon1\",\n    onChange: function onChange(e) {\n      return setForm(_objectSpread(_objectSpread({}, form), {}, {\n        email: e.target.value\n      }));\n    },\n    required: true\n  })), __jsx(\"div\", {\n    className: \"input-group mb-3\"\n  }, __jsx(\"input\", {\n    type: \"password\",\n    className: \"form-control\",\n    placeholder: \"Kata sandi\",\n    maxLength: 30,\n    \"aria-label\": \"Password\",\n    \"aria-describedby\": \"basic-addon1\",\n    onChange: function onChange(e) {\n      return setForm(_objectSpread(_objectSpread({}, form), {}, {\n        password: e.target.value\n      }));\n    },\n    required: true\n  })), !isEmpty(isSuccess.message) && __jsx(\"div\", {\n    className: \"alert \".concat(isSuccess.status ? 'alert-success' : 'alert-danger', \" alert-dismissible fade show\"),\n    role: \"alert\"\n  }, capitalize(isSuccess.message)), __jsx(\"div\", {\n    className: \"btn-group mb-3\",\n    role: \"group\",\n    \"aria-label\": \"Basic example\"\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\"\n  }, router.pathname === '/login' ? 'Masuk' : 'Daftar')), router.pathname === '/login' ? __jsx(LinkAuth, null, \"Belum punya akun? \", __jsx(Link, {\n    href: \"/register\"\n  }, __jsx(\"a\", null, \"Daftar\"))) : __jsx(LinkAuth, null, \"Sudah punya akun? \", __jsx(Link, {\n    href: \"/login\"\n  }, __jsx(\"a\", null, \"Masuk\"))))));\n};\n\nexport default Auth;","map":null,"metadata":{},"sourceType":"module"}