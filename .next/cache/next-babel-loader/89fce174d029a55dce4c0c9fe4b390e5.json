{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/fahrasnurhidayat/Documents/Fahras/Public/Portofolio/ibid-fe-test/components/molecules/TipsSection/TipsSection.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { Text, Picture, View, Button } from '../../atoms';\nimport { Modals } from '../Modals';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\n\nvar TipsSection = function TipsSection() {\n  _s();\n\n  var _useState = useState({\n    error: null,\n    isLoaded: false,\n    items: []\n  }),\n      getTipssData = _useState[0],\n      setTipsData = _useState[1];\n\n  var _useState2 = useState({\n    title: '',\n    image: ''\n  }),\n      getTipssDetail = _useState2[0],\n      setTipsDetail = _useState2[1];\n\n  var _useState3 = useState(false),\n      show = _useState3[0],\n      setShow = _useState3[1];\n\n  useEffect(function () {\n    var fetchTips = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios('https://wknd-take-home-challenge-api.herokuapp.com/help-tips');\n\n              case 3:\n                response = _context.sent;\n                setTipsData({\n                  error: null,\n                  isLoaded: false,\n                  items: response.data\n                });\n                _context.next = 11;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                setTipsData({\n                  error: _context.t0,\n                  isLoaded: false,\n                  items: []\n                });\n                Swal.fire(_context.t0.response.statusText, '', 'error');\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }));\n\n      return function fetchTips() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchTips();\n  }, []);\n  return __jsx(View, {\n    classNames: \"tipsSection\",\n    backgroundColor: \"black\",\n    padding: \"33px 0 127px 0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, __jsx(Text, {\n    classNames: \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Help & Tips\"), __jsx(View, {\n    width: \"958px\",\n    display: \"flex\",\n    margin: \"0 auto\",\n    overflow: \"hidden\",\n    classNames: \"desc\",\n    justifyContent: \"space-between\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, !getTipssData.isLoaded && getTipssData.items.map(function (item) {\n    var _jsx;\n\n    return __jsx(\"div\", {\n      key: item.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, __jsx(View, {\n      width: \"311px\",\n      height: \"176px\",\n      position: \"relative\",\n      classNames: \"wrapHelp\",\n      backgroundSize: \"cover\",\n      backgroundImage: \"url(\".concat(item.image, \")\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, __jsx(View, {\n      width: \"100%\",\n      bottom: \"0px\",\n      display: \"flex\",\n      padding: \"17px 25px\",\n      position: \"absolute\",\n      alignItems: \"center\",\n      classNames: \"warpTextTips\",\n      justifyContent: \"space-between\",\n      backgroundColor: \"rgba(0, 0, 0, 0)\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }, __jsx(Text, {\n      color: \"white\",\n      width: \"70.1%\",\n      fontWeight: \"600\",\n      fontSize: \"16px\",\n      letterSpacing: \"-0.57px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, item.title), __jsx(Button, {\n      padding: \"0\",\n      width: \"32px\",\n      border: \"none\",\n      height: \"32px\",\n      borderRadius: \"50%\",\n      onClick: function onClick() {\n        setShow(true);\n        setTipsDetail({\n          title: item.title,\n          image: item.image\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, __jsx(Picture, (_jsx = {\n      source: require('../../../assets/icons/ic-next.svg'),\n      imageName: \"ic-next\",\n      width: \"32px\",\n      height: \"32px\",\n      cursor: \"pointer\"\n    }, _defineProperty(_jsx, \"imageName\", \"ic-button\"), _defineProperty(_jsx, \"__self\", _this), _defineProperty(_jsx, \"__source\", {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }), _jsx))), __jsx(Modals, {\n      item: getTipssDetail,\n      show: show,\n      setShow: setShow,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }))));\n  })));\n};\n\n_s(TipsSection, \"JPjNKPKHSgofHwh4FI0xT8qIE4I=\");\n\n_c = TipsSection;\nexport default TipsSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"TipsSection\");","map":{"version":3,"sources":["/Users/fahrasnurhidayat/Documents/Fahras/Public/Portofolio/ibid-fe-test/components/molecules/TipsSection/TipsSection.jsx"],"names":["React","useEffect","useState","Text","Picture","View","Button","Modals","axios","Swal","TipsSection","error","isLoaded","items","getTipssData","setTipsData","title","image","getTipssDetail","setTipsDetail","show","setShow","fetchTips","response","data","fire","statusText","map","item","id","require"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Text, Picture, View, Button } from '../../atoms'\nimport { Modals } from '../Modals'\nimport axios from 'axios'\nimport Swal from 'sweetalert2'\n\nconst TipsSection = () => {\n  const [getTipssData, setTipsData] = useState({\n    error: null,\n    isLoaded: false,\n    items: []\n  })\n  const [getTipssDetail, setTipsDetail] = useState({\n    title: '',\n    image: ''\n  })\n  const [show, setShow] = useState(false)\n\n  useEffect(() => {\n    const fetchTips = async () => {\n      try {\n        let response = await axios('https://wknd-take-home-challenge-api.herokuapp.com/help-tips')\n        setTipsData({\n          error: null,\n          isLoaded: false,\n          items: response.data\n        })\n      } catch (err) {\n        setTipsData({\n          error: err,\n          isLoaded: false,\n          items: []\n        })\n\n        Swal.fire(\n          err.response.statusText,\n          '',\n          'error',\n        )\n      } \n    }\n\n    fetchTips()\n  }, [])\n\n  return (\n    <View\n      classNames=\"tipsSection\"\n      backgroundColor=\"black\"\n      padding=\"33px 0 127px 0\"\n    >\n      <Text classNames=\"title\">Help & Tips</Text>\n      <View\n        width=\"958px\"\n        display=\"flex\"\n        margin=\"0 auto\"\n        overflow=\"hidden\"\n        classNames=\"desc\"\n        justifyContent=\"space-between\"\n      >\n        {!getTipssData.isLoaded && getTipssData.items.map(item => (\n          <div key={item.id}>\n            <View\n              width=\"311px\"\n              height=\"176px\"\n              position=\"relative\"\n              classNames=\"wrapHelp\"\n              backgroundSize=\"cover\"\n              backgroundImage={`url(${item.image})`}\n            >\n              <View\n                width=\"100%\"\n                bottom=\"0px\"\n                display=\"flex\"\n                padding=\"17px 25px\"\n                position=\"absolute\"\n                alignItems=\"center\"\n                classNames=\"warpTextTips\"\n                justifyContent=\"space-between\"\n                backgroundColor=\"rgba(0, 0, 0, 0)\"\n              >\n                <Text\n                  color=\"white\"\n                  width=\"70.1%\"\n                  fontWeight=\"600\"\n                  fontSize=\"16px\"\n                  letterSpacing=\"-0.57px\"\n                >\n                  {item.title}\n                </Text>\n                <Button\n                  padding=\"0\"\n                  width=\"32px\"\n                  border=\"none\"\n                  height=\"32px\"\n                  borderRadius=\"50%\"\n                  onClick={() => {\n                    setShow(true)\n                    setTipsDetail({\n                      title: item.title,\n                      image: item.image\n                    })\n                  }}\n                >\n                  <Picture source={require('../../../assets/icons/ic-next.svg')} imageName=\"ic-next\" width=\"32px\" height=\"32px\" cursor=\"pointer\" imageName=\"ic-button\"/>\n                </Button>\n                <Modals\n                  item={getTipssDetail}\n                  show={show}\n                  setShow={setShow}\n                />\n              </View>\n            </View>\n          </div>\n        ))}\n      </View>\n    </View>\n  )\n}\n\nexport default TipsSection\n"]},"metadata":{},"sourceType":"module"}