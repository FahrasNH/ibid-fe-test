{"ast":null,"code":"var _jsxFileName = \"/Users/fahrasnurhidayat/Documents/Fahras/Public/Portofolio/ibid-fe-test/components/Auth/Auth.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { apiPostAuth } from '../../utils/api';\nimport { useRouter } from 'next/router';\nimport { useState, useEffect } from 'react';\nimport { isEmpty, capitalize } from 'lodash';\nimport GoogleLogin from 'react-google-login';\nimport Link from 'next/link';\nimport { Container, AuthCard, Title, Divider, LinkAuth } from './authStyle';\n\nconst Auth = () => {\n  const router = useRouter();\n  const {\n    0: form,\n    1: setForm\n  } = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    0: isSuccess,\n    1: setSuccess\n  } = useState({\n    message: '',\n    status: null\n  });\n  useEffect(() => {\n    if (!isEmpty(window.localStorage.getItem('isToken'))) {\n      router.push('/');\n    }\n  }, []);\n\n  const responseGoogle = response => {\n    console.log(response);\n    console.log(response.profileObj);\n  };\n\n  const onSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      const response = await apiPostAuth(`https://reqres.in/api${router.pathname}`, form);\n      window.localStorage.setItem('isToken', response.data.token);\n\n      if (response.status === 200) {\n        router.pathname === '/login' ? setSuccess({\n          status: true,\n          message: 'Berhasil masuk!'\n        }) : setSuccess({\n          status: true,\n          message: 'Berhasil daftar!'\n        });\n        setTimeout(() => {\n          setSuccess({\n            status: true,\n            message: ''\n          });\n          router.push('/');\n        }, 2000);\n      }\n    } catch (error) {\n      if (error.response.status === 400) {\n        router.pathname === '/login' ? setSuccess({\n          status: false,\n          message: 'Email atau Password salah!'\n        }) : setSuccess({\n          status: false,\n          message: 'Gagal mendaftar!'\n        });\n        setTimeout(() => {\n          setSuccess({\n            status: false,\n            message: ''\n          });\n        }, 5000);\n      }\n    }\n  };\n\n  return __jsx(Container, {\n    className: \"container-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, __jsx(AuthCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, router.pathname === '/login' ? __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 42\n    }\n  }, \"Masuk\") : __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 65\n    }\n  }, \"Daftar\"), router.pathname === '/login' ? __jsx(React.Fragment, null, __jsx(GoogleLogin, {\n    clientId: \"1036312684002-9r1ei9mim483alvglj88bovq1prufg1i.apps.googleusercontent.com\",\n    buttonText: \"Masuk dengan Google\",\n    onSuccess: responseGoogle,\n    onFailure: responseGoogle,\n    cookiePolicy: 'single_host_origin',\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), __jsx(Divider, {\n    className: \"hr-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, \"atau\"))) : null, __jsx(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"input-group mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Email\",\n    maxLength: 30,\n    \"aria-label\": \"Email\",\n    \"aria-describedby\": \"basic-addon1\",\n    onChange: e => setForm(_objectSpread(_objectSpread({}, form), {}, {\n      email: e.target.value\n    })),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: \"input-group mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    type: \"password\",\n    className: \"form-control\",\n    placeholder: \"Kata sandi\",\n    maxLength: 30,\n    \"aria-label\": \"Password\",\n    \"aria-describedby\": \"basic-addon1\",\n    onChange: e => setForm(_objectSpread(_objectSpread({}, form), {}, {\n      password: e.target.value\n    })),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  })), !isEmpty(isSuccess.message) && __jsx(\"div\", {\n    className: `alert ${isSuccess.status ? 'alert-success' : 'alert-danger'} alert-dismissible fade show`,\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, capitalize(isSuccess.message)), __jsx(\"div\", {\n    className: \"btn-group mb-3\",\n    role: \"group\",\n    \"aria-label\": \"Basic example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, router.pathname === '/login' ? 'Masuk' : 'Daftar')), router.pathname === '/login' ? __jsx(LinkAuth, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 44\n    }\n  }, \"Belum punya akun? \", __jsx(Link, {\n    href: \"/register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 72\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 95\n    }\n  }, \"Daftar\"))) : __jsx(LinkAuth, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 129\n    }\n  }, \"Sudah punya akun? \", __jsx(Link, {\n    href: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 157\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 177\n    }\n  }, \"Masuk\"))))));\n};\n\nexport default Auth;","map":{"version":3,"sources":["/Users/fahrasnurhidayat/Documents/Fahras/Public/Portofolio/ibid-fe-test/components/Auth/Auth.jsx"],"names":["apiPostAuth","useRouter","useState","useEffect","isEmpty","capitalize","GoogleLogin","Link","Container","AuthCard","Title","Divider","LinkAuth","Auth","router","form","setForm","email","password","isSuccess","setSuccess","message","status","window","localStorage","getItem","push","responseGoogle","response","console","log","profileObj","onSubmit","event","preventDefault","pathname","setItem","data","token","setTimeout","error","width","e","target","value"],"mappings":"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","sourcesContent":["import { apiPostAuth } from '../../utils/api'\nimport { useRouter } from 'next/router'\nimport { useState, useEffect } from 'react'\nimport { isEmpty, capitalize } from 'lodash'\nimport GoogleLogin from 'react-google-login'\nimport Link from 'next/link'\nimport {\n  Container, AuthCard,\n  Title, Divider,\n  LinkAuth,\n} from './authStyle'\n\nconst Auth = () => {\n  const router = useRouter()\n  const [form, setForm] = useState({\n    email: '',\n    password: '',\n  })\n  const [isSuccess, setSuccess] = useState({\n    message: '',\n    status: null,\n  })\n\n  useEffect(() => {\n    if (!isEmpty(window.localStorage.getItem('isToken'))) {\n      router.push('/')\n    }\n  }, [])\n\n  const responseGoogle = (response) => {\n    console.log(response)\n    console.log(response.profileObj)\n  }\n\n  const onSubmit = async (event) => {\n    event.preventDefault()\n\n    try {\n      const response = await apiPostAuth(`https://reqres.in/api${router.pathname}`, form)\n\n      window.localStorage.setItem('isToken', response.data.token)\n      if (response.status === 200) {\n        router.pathname === '/login' ? setSuccess({ status: true, message:'Berhasil masuk!' }) : setSuccess({ status: true, message: 'Berhasil daftar!' })\n        setTimeout(() => {\n          setSuccess({ status: true, message: '' })\n          router.push('/')\n        }, 2000)\n      }\n    } catch (error) {\n      if (error.response.status === 400) {\n        router.pathname === '/login' ? setSuccess({ status: false, message: 'Email atau Password salah!' }) : setSuccess({ status: false, message: 'Gagal mendaftar!' })\n        setTimeout(() => {\n          setSuccess({ status: false, message: '' })\n        }, 5000)\n      }\n    } \n  }\n\n  return (\n    <Container className=\"container-sm\">\n      <AuthCard>\n        { router.pathname === '/login' ? <Title>Masuk</Title> : <Title>Daftar</Title> }\n        {\n          router.pathname === '/login'\n          ? <>\n            <GoogleLogin\n              clientId=\"1036312684002-9r1ei9mim483alvglj88bovq1prufg1i.apps.googleusercontent.com\"\n              buttonText=\"Masuk dengan Google\"\n              onSuccess={responseGoogle}\n              onFailure={responseGoogle}\n              cookiePolicy={'single_host_origin'}\n              style={{ width: '100%' }}\n            />\n            <Divider className=\"hr-label\">\n              <span>atau</span>\n            </Divider>\n          </> : null\n        }\n        <form onSubmit={onSubmit}>\n          <div className=\"input-group mb-3\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Email\"\n              maxLength={30}\n              aria-label=\"Email\"\n              aria-describedby=\"basic-addon1\"\n              onChange={(e) => setForm({ ...form, email: e.target.value })}\n              required\n            />\n          </div>\n          <div className=\"input-group mb-3\">\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              placeholder=\"Kata sandi\"\n              maxLength={30}\n              aria-label=\"Password\"\n              aria-describedby=\"basic-addon1\"\n              onChange={(e) => setForm({ ...form, password: e.target.value })}\n              required/>\n          </div>\n          { !isEmpty(isSuccess.message) && (\n            <div className={`alert ${isSuccess.status ? 'alert-success' : 'alert-danger'} alert-dismissible fade show`} role=\"alert\">\n              {capitalize(isSuccess.message)}\n            </div>\n          )}\n          <div className=\"btn-group mb-3\" role=\"group\" aria-label=\"Basic example\">\n            <button type=\"submit\" className=\"btn btn-primary\">{router.pathname === '/login' ? 'Masuk' : 'Daftar'}</button>\n          </div>\n          { router.pathname === '/login' ? <LinkAuth>Belum punya akun? <Link href=\"/register\"><a>Daftar</a></Link></LinkAuth> : <LinkAuth>Sudah punya akun? <Link href=\"/login\"><a>Masuk</a></Link></LinkAuth> }\n        </form>\n      </AuthCard>\n    </Container>\n  )\n}\n\nexport default Auth\n"]},"metadata":{},"sourceType":"module"}