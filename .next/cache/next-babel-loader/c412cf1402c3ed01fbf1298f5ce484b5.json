{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/fahrasnurhidayat/Documents/Fahras/Public/Portofolio/ibid-fe-test/components/atoms/View/View.jsx\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { string, any } from 'prop-types';\n\nvar View = function View(props) {\n  var classNames = props.classNames,\n      id = props.id,\n      children = props.children,\n      styles = _objectWithoutProperties(props, [\"classNames\", \"id\", \"children\"]);\n\n  return __jsx(\"div\", {\n    className: classNames,\n    id: id,\n    style: _objectSpread({}, styles),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, children);\n};\n\n_c = View;\nView.propTypes = {\n  id: string,\n  children: any,\n  styles: string,\n  classNames: string\n};\nexport default View;\n\nvar _c;\n\n$RefreshReg$(_c, \"View\");","map":{"version":3,"sources":["/Users/fahrasnurhidayat/Documents/Fahras/Public/Portofolio/ibid-fe-test/components/atoms/View/View.jsx"],"names":["React","string","any","View","props","classNames","id","children","styles","propTypes"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,GAAjB,QAA4B,YAA5B;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AAAA,MACdC,UADc,GAC0BD,KAD1B,CACdC,UADc;AAAA,MACFC,EADE,GAC0BF,KAD1B,CACFE,EADE;AAAA,MACEC,QADF,GAC0BH,KAD1B,CACEG,QADF;AAAA,MACeC,MADf,4BAC0BJ,KAD1B;;AAGtB,SACE;AAAK,IAAA,SAAS,EAAEC,UAAhB;AAA4B,IAAA,EAAE,EAAEC,EAAhC;AAAoC,IAAA,KAAK,oBAAME,MAAN,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QADH,CADF;AAKD,CARD;;KAAMJ,I;AAUNA,IAAI,CAACM,SAAL,GAAiB;AACfH,EAAAA,EAAE,EAAEL,MADW;AAEfM,EAAAA,QAAQ,EAAEL,GAFK;AAGfM,EAAAA,MAAM,EAAEP,MAHO;AAIfI,EAAAA,UAAU,EAAEJ;AAJG,CAAjB;AAOA,eAAeE,IAAf","sourcesContent":["import React from 'react'\nimport { string, any } from 'prop-types'\n\nconst View = (props) => {\n  const { classNames, id, children, ...styles } = props\n\n  return (\n    <div className={classNames} id={id} style={{...styles}}>\n      {children}\n    </div>\n  )\n}\n\nView.propTypes = {\n  id: string,\n  children: any,\n  styles: string,\n  classNames: string,\n}\n\nexport default View\n"]},"metadata":{},"sourceType":"module"}